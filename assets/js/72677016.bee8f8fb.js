"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[4681],{23631:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"data_formats/mps/slam/mps_calibration","title":"Calibration Data","description":"Online calibration is generated as part of SLAM MPS requests.","source":"@site/docs/data_formats/mps/slam/mps_calibration.mdx","sourceDirName":"data_formats/mps/slam","slug":"/data_formats/mps/slam/mps_calibration","permalink":"/projectaria_tools/docs/data_formats/mps/slam/mps_calibration","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_formats/mps/slam/mps_calibration.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50,"title":"Calibration Data"},"sidebar":"tutorialSidebar","previous":{"title":"Semi-Dense Point Cloud","permalink":"/projectaria_tools/docs/data_formats/mps/slam/mps_pointcloud"},"next":{"title":"Multi-SLAM","permalink":"/projectaria_tools/docs/data_formats/mps/slam/mps_multi_slam"}}');var o=a(74848),n=a(28453);const s={sidebar_position:50,title:"Calibration Data"},r="MPS Output - Calibration",l={},c=[{value:"Online calibration",id:"online-calibration",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"mps-output---calibration",children:"MPS Output - Calibration"})}),"\n",(0,o.jsxs)(t.p,{children:["Online calibration is generated as part of SLAM ",(0,o.jsx)(t.a,{href:"/projectaria_tools/docs/ARK/mps/",children:"MPS requests"}),"."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"online_calibration.jsonl"})," file"]}),"\n"]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.a,{href:"/projectaria_tools/docs/data_utilities/visualization/visualization_python#run-aria-sensor-viewer",children:"Aria Sensor Viewer"})," displays the relative position and orientation of most Project Aria glasses sensors (cameras, IMUs, microphones, magnetometer & barometer) in a common reference."]}),"\n",(0,o.jsx)(t.h2,{id:"online-calibration",children:"Online calibration"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.code,{children:"online_calibration.jsonl"})," contains one json online calibration record per line. Each record is a json dict object that contains timestamp metadata and the result of online calibration for the cameras and IMUs. Note that after the v1.1.0 MPS SLAM release, we improved the RGB camera online calibration for time offsets estimation, intrinsics/extrinsics estimation, as well as exposing the image readout time for compensating the rolling shutter effect."]}),"\n",(0,o.jsxs)(t.p,{children:["The calibration parameters contain ",(0,o.jsx)(t.a,{href:"/projectaria_tools/docs/tech_insights/camera_intrinsic_models",children:"intrinsics"})," and ",(0,o.jsx)(t.a,{href:"/projectaria_tools/docs/data_formats/coordinate_convention/3d_coordinate_frame_convention",children:"extrinsics"})," parameters for each sensor as well as a time offsets which best temporally align their data."]}),"\n",(0,o.jsxs)(t.p,{children:["For how to load and read online calibrations in Python and C++, please check the ",(0,o.jsx)(t.a,{href:"/projectaria_tools/docs/data_utilities/core_code_snippets/mps#online-calibration",children:"code example"})]})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>r});var i=a(96540);const o={},n=i.createContext(o);function s(e){const t=i.useContext(n);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);