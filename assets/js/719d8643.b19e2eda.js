"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[2609],{28453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>o});var s=n(96540);const a={},r=s.createContext(a);function t(e){const i=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:t(e.components),s.createElement(r.Provider,{value:i},e.children)}},54999:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"data_formats/aria_vrs/aria_vrs_command_line","title":"VRS command line tool","description":"The vrs command line tool is a Swiss army knife utility to manipulate VRS files (operations such as inspection, or copy/filter editing).","source":"@site/docs/data_formats/aria_vrs/aria_vrs_command_line.mdx","sourceDirName":"data_formats/aria_vrs","slug":"/data_formats/aria_vrs/aria_vrs_command_line","permalink":"/projectaria_tools/docs/data_formats/aria_vrs/aria_vrs_command_line","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/data_formats/aria_vrs/aria_vrs_command_line.mdx","tags":[],"version":"current","sidebarPosition":40,"frontMatter":{"sidebar_position":40,"title":"VRS command line tool"},"sidebar":"tutorialSidebar","previous":{"title":"Timestamp Definitions","permalink":"/projectaria_tools/docs/data_formats/aria_vrs/timestamps_in_aria_vrs"},"next":{"title":"VRSPlayer","permalink":"/projectaria_tools/docs/data_formats/aria_vrs/aria_vrsplayer"}}');var a=n(74848),r=n(28453);const t={sidebar_position:40,title:"VRS command line tool"},o=void 0,l={},c=[{value:"File validation",id:"file-validation",level:2},{value:"File Integrity Validation",id:"file-integrity-validation",level:3},{value:"Checksums",id:"checksums",level:3},{value:"File inspection",id:"file-inspection",level:2},{value:"Trimming",id:"trimming",level:2},{value:"Stream removal",id:"stream-removal",level:3},{value:"Time cropping",id:"time-cropping",level:3},{value:"VRS tools installation",id:"vrs-tools-installation",level:2}];function d(e){const i={a:"a",code:"code",div:"div",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"vrs"})," command line tool is a Swiss army knife utility to manipulate VRS files (operations such as inspection, or copy/filter editing)."]}),"\n",(0,a.jsx)(i.div,{children:(0,a.jsx)(i.p,{children:"VRS file format has been created to be immutable, but files can be copied, record-by-record, and during copies, certain transformations can be applied."})}),"\n",(0,a.jsx)(i.h2,{id:"file-validation",children:"File validation"}),"\n",(0,a.jsxs)(i.p,{children:["_Commands: ",(0,a.jsx)(i.code,{children:"check"}),", ",(0,a.jsx)(i.code,{children:"checksum"})]}),"\n",(0,a.jsx)(i.h3,{id:"file-integrity-validation",children:"File Integrity Validation"}),"\n",(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.code,{children:"check"}),' command "simply" decodes every record in the VRS file and prints how many records were decoded successfully. It proves that the VRS file is correct at the VRS level.']}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs check file.vrs\n"})}),"\n",(0,a.jsx)(i.h3,{id:"checksums",children:"Checksums"}),"\n",(0,a.jsx)(i.p,{children:"A logical data checksum can be generated for a VRS file. Could be use to ensure data integrity while doing VRS file transfer/Download when providing datasets."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs checksum file.vrs\n"})}),"\n",(0,a.jsx)(i.h2,{id:"file-inspection",children:"File inspection"}),"\n",(0,a.jsx)(i.p,{children:"To peek into a VRS file, simply run:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs sample_file.vrs\n"})}),"\n",(0,a.jsx)(i.p,{children:"It will print a lot of information, that can be overwhelming the first time you see what's in a VRS file!"}),"\n",(0,a.jsx)(i.p,{children:"To have a simpler view and list only the the available streams and number of records you can do:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs sample_file.vrs | grep records\n"})}),"\n",(0,a.jsx)(i.h2,{id:"trimming",children:"Trimming"}),"\n",(0,a.jsx)(i.p,{children:"You will find here instructions on how to TRIM data from an existing VRS file (instructions can be combined):"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Trimming by stream_id"}),"\n",(0,a.jsx)(i.li,{children:"Trimming by time"}),"\n"]}),"\n",(0,a.jsx)(i.h3,{id:"stream-removal",children:"Stream removal"}),"\n",(0,a.jsxs)(i.p,{children:["_Options: ",(0,a.jsx)(i.code,{children:"[+|-]<stream_id>"})]}),"\n",(0,a.jsx)(i.p,{children:'As an example, we are here removing the EyeTracking stream (["211-1"]):'}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs copy original.vrs --to new.vrs - 211\n"})}),"\n",(0,a.jsx)(i.h3,{id:"time-cropping",children:"Time cropping"}),"\n",(0,a.jsx)(i.p,{children:(0,a.jsxs)(i.em,{children:["Options: ",(0,a.jsx)(i.code,{children:"--before [+|-]<max-timestamp>"}),", ",(0,a.jsx)(i.code,{children:"--after [+|-]<min-timestamp>"}),", ",(0,a.jsx)(i.code,{children:" --range [+|-]<min-timestamp> [+|-]<max-timestamp>"}),", ",(0,a.jsx)(i.code,{children:"--around [+|-]<timestamp> <time-range>"}),"."]})}),"\n",(0,a.jsx)(i.p,{children:"To use _relative timing, i.e 10 seconds of a file while skipping the first 2 seconds of data records, use:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs copy original.vrs --to new.vrs --range +2 +12\n"})}),"\n",(0,a.jsx)(i.p,{children:"You can also choose to trim only from a given relative time with (i.e. keep everything after the first 2 seconds):"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs copy original.vrs --to new.vrs --after +2\n"})}),"\n",(0,a.jsx)(i.p,{children:"To use _absolute timestamps, use:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"vrs copy original.vrs --to new.vrs --range 149002622 158702622\n"})}),"\n",(0,a.jsx)(i.div,{children:(0,a.jsxs)(i.p,{children:["For more in-depth details feel free to explore this ",(0,a.jsx)(i.a,{href:"https://facebookresearch.github.io/vrs/docs/VrsCliTool",children:"VRS Cli Tool page"}),"."]})}),"\n",(0,a.jsx)(i.h2,{id:"vrs-tools-installation",children:"VRS tools installation"}),"\n",(0,a.jsxs)(i.p,{children:["Please follow our ",(0,a.jsx)(i.a,{href:"/projectaria_tools/docs/data_formats/aria_vrs/aria_vrs_tools_installation",children:"VRS Tools installation guide"})]})]})}function m(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);