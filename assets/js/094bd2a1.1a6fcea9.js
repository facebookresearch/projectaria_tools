"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[9216],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>t});var s=i(96540);const r={},o=s.createContext(r);function d(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),s.createElement(o.Provider,{value:n},e.children)}},94006:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>u,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"ARK/troubleshooting/linux_usb_driver","title":"Fix USB Driver Issues in Linux","description":"Overview","source":"@site/docs/ARK/troubleshooting/linux_usb_driver.mdx","sourceDirName":"ARK/troubleshooting","slug":"/ARK/troubleshooting/linux_usb_driver","permalink":"/projectaria_tools/docs/ARK/troubleshooting/linux_usb_driver","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/ARK/troubleshooting/linux_usb_driver.mdx","tags":[],"version":"current","sidebarPosition":80,"frontMatter":{"sidebar_position":80,"title":"Fix USB Driver Issues in Linux"},"sidebar":"tutorialSidebar","previous":{"title":"Reduce VRS File Size","permalink":"/projectaria_tools/docs/ARK/troubleshooting/reduce_vrs_file_size"},"next":{"title":"Open Datasets","permalink":"/projectaria_tools/docs/open_datasets/"}}');var r=i(74848),o=i(28453);const d={sidebar_position:80,title:"Fix USB Driver Issues in Linux"},t=void 0,c={},a=[{value:"Overview",id:"overview",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Instructions",id:"instructions",level:2},{value:"Look for Aria device",id:"look-for-aria-device",level:3},{value:"Change udev",id:"change-udev",level:3},{value:"Step 1: Get VENDOR_ID and PRODUCT_ID",id:"step-1-get-vendor_id-and-product_id",level:4},{value:"Step 2: Modify 51-android.rules",id:"step-2-modify-51-androidrules",level:4}];function l(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"If the computer can't detect a Project Aria device, it may be that your Aria device's battery is drained, or in Linux it may be because of your USB driver."}),"\n",(0,r.jsx)(n.p,{children:"Use the following instructions to resolve USB driver issues in Linux."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://developer.android.com/tools/adb",children:"Android Device Bridge (ADB)"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["To install ADB use ",(0,r.jsx)(n.code,{children:"sudo apt-get android-tools"})]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"instructions",children:"Instructions"}),"\n",(0,r.jsx)(n.h3,{id:"look-for-aria-device",children:"Look for Aria device"}),"\n",(0,r.jsxs)(n.p,{children:["With your Aria device plugged into your computer, use the command ",(0,r.jsx)(n.code,{children:"adb devices"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"If your device can be found, you'll get an output like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"List of devices attached\n1820dc10 device\n"})}),"\n",(0,r.jsx)(n.p,{children:"If you see no permissions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"List of devices attached\n1820dc10    no permissions\n"})}),"\n",(0,r.jsx)(n.p,{children:"you likely need to change your udev."}),"\n",(0,r.jsx)(n.h3,{id:"change-udev",children:"Change udev"}),"\n",(0,r.jsxs)(n.p,{children:["The following instructions were taken from ",(0,r.jsx)(n.a,{href:"https://wiki.archlinux.org/index.php/Android_Debug_Bridge",children:"Arch Linux's Android Debug Bridge instructions"})," and ",(0,r.jsx)(n.a,{href:"http://www.janosgyerik.com/adding-udev-rules-for-usb-debugging-android-devices/",children:"Janos Gyerik's Adding udev rules"}),":"]}),"\n",(0,r.jsx)(n.h4,{id:"step-1-get-vendor_id-and-product_id",children:"Step 1: Get VENDOR_ID and PRODUCT_ID"}),"\n",(0,r.jsx)(n.p,{children:"Use list devices to find the [VENDOR_ID] and [PRODUCT_ID] of your Aria device."}),"\n",(0,r.jsx)(n.p,{children:"The command"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"lsusb\n"})}),"\n",(0,r.jsx)(n.p,{children:"should show something like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"Bus 002 Device 002: ID 2833:0086 Facebook, Inc. Aria\n"})}),"\n",(0,r.jsx)(n.p,{children:"In the example above, [VENDOR_ID] = 2833 and [PRODUCT_ID]=0086"}),"\n",(0,r.jsx)(n.h4,{id:"step-2-modify-51-androidrules",children:"Step 2: Modify 51-android.rules"}),"\n",(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"lsusb"})," will create a new file ",(0,r.jsx)(n.code,{children:"/etc/udev/rules.d/51-android.rules"})]}),"\n",(0,r.jsxs)(n.p,{children:["Modify 51-android.rules using the following commands or script.  Make sure you create a group called ",(0,r.jsx)(n.code,{children:"adbusers"})," and ",(0,r.jsx)(n.code,{children:"$USER"}),", so that you have the correct permissions."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Commands"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'$ cat /etc/udev/rules.d/51-android.rules\nSUBSYSTEM=="usb", ATTR{idVendor}=="2833", MODE="0660", GROUP="adbusers", TAG+="uaccess"\nSUBSYSTEM=="usb", ATTR{idVendor}=="2833", ATTR{idProduct}=="0086", MODE="0660", GROUP="adbusers", SYMLINK+="android_adb"\nSUBSYSTEM=="usb", ATTR{idVendor}=="2833", ATTR{idProduct}=="0086", MODE="0660", GROUP="adbusers", SYMLINK+="android_fastboot"\n'})}),"\n",(0,r.jsx)(n.p,{children:"Reboot your workstation to ensure the changes are applied."}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Script"})}),"\n",(0,r.jsx)(n.p,{children:"This script will will apply the previous commands and reboot your workstation."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:'IDs=$(lsusb | grep Facebook)\nif [[ "$?" -ne 0 ]]; then\n  echo "Make sure you have your VROS device connected to your workstation"\n  exit\nfi\nIDs=$(echo $IDs | cut -d " " -f 6)\nVID=$(echo $IDs | cut -d ":" -f 1)\nPID=$(echo $IDs | cut -d ":" -f 2)\nconf_f=/etc/udev/rules.d/51-android.rules\nsudo touch ${conf_f}\necho "SUBSYSTEM==\\"usb\\", ATTR{idVendor}==\\"$VID\\", MODE=\\"0660\\", GROUP=\\"adbusers\\", TAG+=\\"uaccess\\""  >> $conf_f\necho "SUBSYSTEM==\\"usb\\", ATTR{idVendor}==\\"$VID\\", ATTR{idProduct}==\\"$PID\\", MODE=\\"0660\\", GROUP=\\"adbusers\\", SYMLINK+=\\"android_adb\\"" >> $conf_f\necho "SUBSYSTEM=="usb", ATTR{idVendor}==\\"$VID\\", ATTR{idProduct}==\\"$PID\\", MODE=\\"0660\\", GROUP=\\"adbusers\\", SYMLINK+=\\"android_fastboot\\""   >> $conf_f\nsudo groupadd adbusers\nsudo usermod -aG adbusers $USER\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);