"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[2258],{28453:(e,s,i)=>{i.d(s,{R:()=>t,x:()=>l});var n=i(96540);const r={},a=n.createContext(r);function t(e){const s=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),n.createElement(a.Provider,{value:s},e.children)}},64420:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"ARK/sdk/samples/device_stream","title":"Streaming and Visualizing All Live Sensor Data","description":"Overview","source":"@site/docs/ARK/sdk/samples/device_stream.mdx","sourceDirName":"ARK/sdk/samples","slug":"/ARK/sdk/samples/device_stream","permalink":"/projectaria_tools/docs/ARK/sdk/samples/device_stream","draft":false,"unlisted":false,"editUrl":"https://github.com/facebookresearch/projectaria_tools/tree/main/website/docs/ARK/sdk/samples/device_stream.mdx","tags":[],"version":"current","sidebarPosition":50,"frontMatter":{"sidebar_position":50,"title":"Streaming and Visualizing All Live Sensor Data"},"sidebar":"tutorialSidebar","previous":{"title":"Streaming Subscription","permalink":"/projectaria_tools/docs/ARK/sdk/samples/streaming_subscribe"},"next":{"title":"Streaming Undistorted RGB Image Using Calibration","permalink":"/projectaria_tools/docs/ARK/sdk/samples/undistort_rgb_image"}}');var r=i(74848),a=i(28453),t=i(98180);const l={sidebar_position:50,title:"Streaming and Visualizing All Live Sensor Data"},o="Streaming and Visualizing All Live Sensor Data",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Run <code>device_stream</code>",id:"run-device_stream",level:2},{value:"Example 1: Start and stop streaming over USB",id:"example-1-start-and-stop-streaming-over-usb",level:3},{value:"Example 2: Start and stop streaming over Wi-Fi",id:"example-2-start-and-stop-streaming-over-wi-fi",level:3},{value:"Code walkthrough",id:"code-walkthrough",level:3},{value:"1. Get StreamingManager instance",id:"1-get-streamingmanager-instance",level:4},{value:"2. Configure Streaming Settings (optional)",id:"2-configure-streaming-settings-optional",level:4},{value:"3. Start Streaming",id:"3-start-streaming",level:4},{value:"4. Write callbacks for each sensor data stream",id:"4-write-callbacks-for-each-sensor-data-stream",level:4},{value:"5. Register callbacks in the streaming client",id:"5-register-callbacks-in-the-streaming-client",level:4},{value:"6. Visualize live stream",id:"6-visualize-live-stream",level:4},{value:"7. Stop the stream &amp; free resources",id:"7-stop-the-stream--free-resources",level:4}];function m(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"streaming-and-visualizing-all-live-sensor-data",children:"Streaming and Visualizing All Live Sensor Data"})}),"\n",(0,r.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(s.p,{children:["This page shows how to run the code sample ",(0,r.jsx)(s.code,{children:"device_stream"})," to:"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Start and stop streaming data from Aria glasses over USB and Wi-Fi"}),"\n",(0,r.jsx)(s.li,{children:"Visualize the sensor streams from Aria's RGB, Mono Scene (SLAM), ET cameras and IMU sensors"}),"\n"]}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"These code samples require Python 3.9+ because of a fastplotlib dependency"})}),"\n",(0,r.jsxs)(s.h2,{id:"run-device_stream",children:["Run ",(0,r.jsx)(s.code,{children:"device_stream"})]}),"\n",(0,r.jsx)(s.h3,{id:"example-1-start-and-stop-streaming-over-usb",children:"Example 1: Start and stop streaming over USB"}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsx)(s.li,{children:"Plug your Aria glasses into your computer, using the provided USB cable"}),"\n",(0,r.jsx)(s.li,{children:"From the samples directory in Terminal, run:"}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python -m device_stream --interface usb --update_iptables\n"})}),"\n",(0,r.jsx)(s.p,{children:"You should then see:"}),"\n",(0,r.jsx)("div",{style:{textAlign:"center"},children:(0,r.jsx)("img",{width:"100%",height:"100%",src:(0,t.default)("img/ARK/sdk/device_stream.png"),alt:"Aria Live Stream Window"})}),"\n",(0,r.jsx)(s.admonition,{type:"note",children:(0,r.jsx)(s.p,{children:"Cameras on Aria glasses are installed sideways. The visualizer rotates the raw image data for a more natural view."})}),"\n",(0,r.jsxs)(s.ol,{start:"3",children:["\n",(0,r.jsx)(s.li,{children:"There are several ways you can stop streaming:"}),"\n"]}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsx)(s.li,{children:"Press q or ESC to quit the app"}),"\n",(0,r.jsx)(s.li,{children:"Use Ctrl-C to terminate in terminal"}),"\n",(0,r.jsx)(s.li,{children:"Press the Capture button on your glasses"}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"example-2-start-and-stop-streaming-over-wi-fi",children:"Example 2: Start and stop streaming over Wi-Fi"}),"\n",(0,r.jsx)(s.p,{children:"Streaming over Wi-Fi is similar, with a few extra steps."}),"\n",(0,r.jsxs)(s.ol,{children:["\n",(0,r.jsxs)(s.li,{children:["Connect your Aria Glasses and Computer to the same Wi-Fi compatible Wi-Fi network:","\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Check ",(0,r.jsx)(s.a,{href:"/projectaria_tools/docs/ARK/sdk/setup",children:"Requirements"})," for details about compatible routers"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(s.li,{children:["Open the Mobile Companion app and tap ",(0,r.jsx)(s.a,{href:"/docs/ARK/mobile_companion_app#dashboard",children:"Wi-Fi on the Dashboard"})," to see your glasses' IP address"]}),"\n",(0,r.jsx)(s.li,{children:"From the samples directory in Terminal, run:"}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"python -m device_stream --interface wifi --device-ip <Glasses IP> --update_iptables\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Make sure you replace ",(0,r.jsx)(s.code,{children:"<Glasses IP>"})," with the IP address you got from the Mobile Companion app"]}),"\n",(0,r.jsxs)(s.p,{children:["If you're on MacOS and lose internet connection, run ",(0,r.jsx)(s.code,{children:"aria-doctor"})," in a separate terminal."]}),"\n",(0,r.jsxs)(s.ol,{start:"4",children:["\n",(0,r.jsx)(s.li,{children:"Stop streaming using any of the methods listed in Example 1"}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"code-walkthrough",children:"Code walkthrough"}),"\n",(0,r.jsx)(s.h4,{id:"1-get-streamingmanager-instance",children:"1. Get StreamingManager instance"}),"\n",(0,r.jsxs)(s.p,{children:["Use ",(0,r.jsx)(s.a,{href:"/docs/ARK/sdk/api_reference#ariasdkstreamingmanager",children:"StreamingManager"})," to start and stop streaming."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_manager = device.streaming_manager\n"})}),"\n",(0,r.jsx)(s.h4,{id:"2-configure-streaming-settings-optional",children:"2. Configure Streaming Settings (optional)"}),"\n",(0,r.jsxs)(s.p,{children:["Specify the profile name for the streaming in ",(0,r.jsx)(s.a,{href:"/docs/ARK/sdk/api_reference#ariasdkstreamingconfig",children:"StreamingConfig"}),", otherwise you'll use your glasses' ",(0,r.jsx)(s.a,{href:"/docs/ARK/ARK_quickstart#set-your-default-recording-profile",children:"default recording profile"}),". If a default recording profile has not been set, you'll stream using profile18. Go to the ",(0,r.jsx)(s.a,{href:"/docs/ARK/sdk/concepts/sdk_sensor_profiles",children:"Sensor Profiles page"})," for supported profiles and their specs."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_config = StreamingConfig()\nstreaming_config.profile_name = args.profile_name\n"})}),"\n",(0,r.jsxs)(s.p,{children:["Use ephemeral streaming certificates to protect your streamed data from being eavesdropped by other computer without certificate. This needs to be set to ",(0,r.jsx)(s.code,{children:"true"})," when no persistent certificates were pre-installed. Go to the ",(0,r.jsx)(s.a,{href:"/projectaria_tools/docs/ARK/sdk/concepts/streaming_internals",children:"Streaming Internals page"})," on the various aspects of streaming security and how certificates are used."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_config.security_options.use_ephemeral_certs = True\nstreaming_manager.streaming_config = streaming_config\n"})}),"\n",(0,r.jsx)(s.h4,{id:"3-start-streaming",children:"3. Start Streaming"}),"\n",(0,r.jsx)(s.p,{children:"Start streaming using all the previously set configurations."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_manager.start_streaming()\n"})}),"\n",(0,r.jsx)(s.h4,{id:"4-write-callbacks-for-each-sensor-data-stream",children:"4. Write callbacks for each sensor data stream"}),"\n",(0,r.jsxs)(s.p,{children:["Create an observer class derived from ",(0,r.jsx)(s.code,{children:"BaseStreamingClientObserver"})," defined in ",(0,r.jsx)(s.code,{children:"visualizer.py"}),". Find the complex example named ",(0,r.jsx)(s.code,{children:"AriaVisualizerStreamingClientObserver"})," in ",(0,r.jsx)(s.code,{children:"visualizer.py"}),", which is used in this sample app to fetch and visualize data from each sensor."]}),"\n",(0,r.jsxs)(s.p,{children:["Find a simpler example in ",(0,r.jsx)(s.a,{href:"/docs/ARK/sdk/samples/undistort_rgb_image",children:"undistort_rgb_image.py"})," to fetch RGB data from the stream:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"class StreamingClientObserver:\n  def __init__(self):\n      self.rgb_image = None\n\n  def on_image_received(self, image: np.array, record: ImageDataRecord):\n      self.rgb_image = image\n"})}),"\n",(0,r.jsx)(s.h4,{id:"5-register-callbacks-in-the-streaming-client",children:"5. Register callbacks in the streaming client"}),"\n",(0,r.jsx)(s.p,{children:"Once your observer class is defined, you will need to register it with a stream client object."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"# get streaming client from the streaming manager\nstreaming_client = streaming_manager.streaming_client\n# create custom visualizer and streaming client observer class instances\naria_visualizer = AriaVisualizer()\naria_visualizer_streaming_client_observer = AriaVisualizerStreamingClientObserver(aria_visualizer)\n# register callbacks\nstreaming_client.set_streaming_client_observer(aria_visualizer_streaming_client_observer)\n"})}),"\n",(0,r.jsx)(s.h4,{id:"6-visualize-live-stream",children:"6. Visualize live stream"}),"\n",(0,r.jsx)(s.p,{children:"Subscribe to the live stream data and enter the rendering loop to visualize the streaming data until the window is closed."}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_client.subscribe()\naria_visualizer.render_loop()\n"})}),"\n",(0,r.jsx)(s.h4,{id:"7-stop-the-stream--free-resources",children:"7. Stop the stream & free resources"}),"\n",(0,r.jsxs)(s.p,{children:["Once you've finished streaming, unsubscribe from ",(0,r.jsx)(s.code,{children:"StreamingClient"})," instance, so that any held resources can be released, stop streaming and disconnect the device."]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-python",children:"streaming_client.unsubscribe()\nstreaming_manager.stop_streaming()\ndevice_client.disconnect(device)\n"})})]})}function h(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);