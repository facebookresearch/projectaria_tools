"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[8004],{28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(96540);const i={},o=n.createContext(i);function s(e){const t=n.useContext(o);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}},65061:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"projectariatools/tools/exportcsv","title":"Export Gen2 On-device Machine Perception data to CSV","description":"This page covers the Gen2 Machine Perception (MP) CSV exporter tool, gen2mpcsv_exporter, which extracts on-device machine perception data from Gen2 Aria VRS files and exports them to CSV files compatible with the MPS (Machine Perception Service) data format.","source":"@site/docs-research-tools/projectariatools/tools/exportcsv.mdx","sourceDirName":"projectariatools/tools","slug":"/projectariatools/tools/exportcsv","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/tools/exportcsv","draft":false,"unlisted":false,"editUrl":"https://www.internalfb.com/code/fbsource/arvr/projects/ariane/aria_research_kit/projectaria_tools/website/docs-research-tools/projectariatools/tools/exportcsv.mdx","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3,"title":"Export Gen2 On-device Machine Perception data to CSV"},"sidebar":"researchToolsSidebar","previous":{"title":"VRS to MP4 Converter","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/tools/vrstomp4"},"next":{"title":"VrsDataProvider Basics","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/pythontutorials/dataprovider"}}');var i=r(74848),o=r(28453);const s={sidebar_position:3,title:"Export Gen2 On-device Machine Perception data to CSV"},a="Export Gen2 On-device Machine Perception data to CSV",c={},d=[{value:"Basic Usage",id:"basic-usage",level:2},{value:"Command Line Options",id:"command-line-options",level:2},{value:"Data Types Exported",id:"data-types-exported",level:2},{value:"Important Notes",id:"important-notes",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"export-gen2-on-device-machine-perception-data-to-csv",children:"Export Gen2 On-device Machine Perception data to CSV"})}),"\n",(0,i.jsxs)(t.p,{children:["This page covers the Gen2 Machine Perception (MP) CSV exporter tool, ",(0,i.jsx)(t.code,{children:"gen2_mp_csv_exporter"}),", which extracts on-device machine perception data from Gen2 Aria VRS files and exports them to CSV files compatible with the MPS (Machine Perception Service) data format.\nThis enables seamless integration and comparison between on-device results and cloud-processed MPS data."]}),"\n",(0,i.jsx)(t.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"gen2_mp_csv_exporter --vrs-path path/to/your/gen2_file.vrs \\\n  --output-folder ./exported_mp_data/ \\\n  --vio-high-freq-subsample-rate 80\n"})}),"\n",(0,i.jsx)(t.h2,{id:"command-line-options",children:"Command Line Options"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Type"}),(0,i.jsx)(t.th,{children:"Required"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--vrs-path"})}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"Yes"}),(0,i.jsx)(t.td,{children:"Path to the Gen2 VRS file containing on-device MP data"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--output-folder"})}),(0,i.jsx)(t.td,{children:"string"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Folder to output MP CSV files. Default: current directory"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"--vio-high-freq-subsample-rate"})}),(0,i.jsx)(t.td,{children:"int"}),(0,i.jsx)(t.td,{children:"No"}),(0,i.jsx)(t.td,{children:"Subsample rate for VIO high frequency data. Default: 1 (no subsampling)"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"data-types-exported",children:"Data Types Exported"}),"\n",(0,i.jsx)(t.p,{children:"After running the tool, your output folder will contain the following files, with csv / JSONL formats that are compatible with MPS data formats:"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:"output_folder/\n\u251c\u2500\u2500 slam/\n\u2502   \u251c\u2500\u2500 open_loop_trajectory.csv      # VIO high-frequency poses\n\u2502   \u2514\u2500\u2500 online_calibration.jsonl      # Online calibration updates\n\u251c\u2500\u2500 eye_gaze/\n\u2502   \u2514\u2500\u2500 generalized_eye_gaze.csv      # Eye gaze data\n\u2514\u2500\u2500 hand_tracking/\n    \u2514\u2500\u2500 hand_tracking_results.csv     # Hand tracking results\n"})}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Data Type"}),(0,i.jsx)(t.th,{children:"Source VRS Data Stream"}),(0,i.jsx)(t.th,{children:"Output File"}),(0,i.jsx)(t.th,{children:"Content"}),(0,i.jsx)(t.th,{children:"Notes"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"VIO High-Frequency Trajectory"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"vio_high_frequency"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"${OUTPUT_FOLDER}/slam/open_loop_trajectory.csv"})}),(0,i.jsx)(t.td,{children:"High-frequency device trajectory poses from Visual-Inertial Odometry"}),(0,i.jsxs)(t.td,{children:["Compatible with MPS open-loop trajectory format. Subsampling configurable via ",(0,i.jsx)(t.code,{children:"--vio-high-freq-subsample-rate"})," parameter"]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Eye Gaze Data"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"eyegaze"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"${OUTPUT_FOLDER}/eye_gaze/generalized_eye_gaze.csv"})}),(0,i.jsx)(t.td,{children:"Eye gaze directions and fixation points"}),(0,i.jsx)(t.td,{children:"Compatible with MPS eye gaze format"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Hand Tracking Data"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"handtracking"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"${OUTPUT_FOLDER}/hand_tracking/hand_tracking_results.csv"})}),(0,i.jsx)(t.td,{children:"Hand pose estimates, joint positions, and hand landmarks"}),(0,i.jsx)(t.td,{children:"Compatible with MPS hand tracking format"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"Online Calibration Data"}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"vio"})}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"${OUTPUT_FOLDER}/slam/online_calibration.jsonl"})}),(0,i.jsx)(t.td,{children:"Online SLAM camera and IMU calibration updates computed on-device"}),(0,i.jsx)(t.td,{children:"Compatible with MPS online calibration format"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Gen2 specific"}),": This tool only works with Gen2 Aria VRS files that contain on-device MP data"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Stream availability"}),": Not all Gen2 recordings may contain all MP data streams"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Data consistency"}),": The tool preserves original timestamps and coordinate systems from the on-device processing"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Calibration updates"}),": Online calibration data represents dynamic updates computed during recording, which may differ from factory calibration"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);