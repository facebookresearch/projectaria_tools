"use strict";(globalThis.webpackChunkwebsite=globalThis.webpackChunkwebsite||[]).push([[9951],{7227:(e,r,s)=>{s.r(r),s.d(r,{default:()=>i});s(96540);var n=s(34164);const a={tabItem:"tabItem_Ymn6"};var t=s(74848);function i({children:e,hidden:r,className:s}){return(0,t.jsx)("div",{role:"tabpanel",className:(0,n.A)(a.tabItem,s),hidden:r,children:e})}},23974:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>h,contentTitle:()=>u,default:()=>v,frontMatter:()=>d,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"projectariatools/tools/cppviz","title":"Visualization Tools (C++)","description":"This page covers the C++ visualization tools available in Project Aria Tools. These tools provide native performance visualization of Aria data using the Pangolin framework.","source":"@site/docs-research-tools/projectariatools/tools/cppviz.mdx","sourceDirName":"projectariatools/tools","slug":"/projectariatools/tools/cppviz","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/tools/cppviz","draft":false,"unlisted":false,"editUrl":"https://www.internalfb.com/code/fbsource/arvr/projects/ariane/aria_research_kit/projectaria_tools/website/docs-research-tools/projectariatools/tools/cppviz.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Visualization Tools (C++)"},"sidebar":"researchToolsSidebar","previous":{"title":"Visualization Tools (Python)","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/tools/pythonviz"},"next":{"title":"VRS to MP4 Converter","permalink":"/projectaria_tools/gen2/research-tools/projectariatools/tools/vrstomp4"}}');var a=s(74848),t=s(28453),i=s(67581),o=s(98180),l=s(49489),c=s(7227);const d={sidebar_position:1,title:"Visualization Tools (C++)"},u="C++ Visualization Tools",h={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"<code>aria_viewer</code>",id:"aria_viewer",level:2},{value:"Basic Usage",id:"basic-usage",level:3},{value:"Command Line Options",id:"command-line-options",level:3},{value:"What You&#39;ll See",id:"what-youll-see",level:3},{value:"Interactive Controls",id:"interactive-controls",level:3},{value:"Known Issues and Workarounds",id:"known-issues-and-workarounds",level:3}];function m(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"c-visualization-tools",children:"C++ Visualization Tools"})}),"\n",(0,a.jsx)(r.p,{children:"This page covers the C++ visualization tools available in Project Aria Tools. These tools provide native performance visualization of Aria data using the Pangolin framework."}),"\n",(0,a.jsx)(r.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(r.p,{children:"To use the C++ visualization tools, you need to build them from source using CMake. These tools are not included in the standard Python package installation."}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Required build step"}),': Follow the "build using CMake from source code" instructions in the ',(0,a.jsx)(r.a,{href:"/projectaria_tools/gen2/research-tools/projectariatools/advanced-installation",children:"Advanced Installation"})," guide to compile the C++ visualization tools."]}),"\n",(0,a.jsx)(r.p,{children:"The C++ tools require the Pangolin library for visualization. If Pangolin is not found during compilation, the visualization tools will not be built."}),"\n",(0,a.jsx)(r.h2,{id:"aria_viewer",children:(0,a.jsx)(r.code,{children:"aria_viewer"})}),"\n",(0,a.jsxs)(r.p,{children:["The ",(0,a.jsx)(r.code,{children:"aria_viewer"})," is a C++ binary that provides real-time visualization of Aria VRS (Video Recording and Sensor) data using the Pangolin framework. It offers native performance for visualizing multi-modal sensor data from Aria devices."]}),"\n",(0,a.jsx)(i.A,{alt:"Docusaurus themed image",sources:{light:(0,o.default)("/img/docs-research-tools/projectariatools/aria_viewer.png"),dark:(0,o.default)("/img/docs-research-tools/projectariatools/aria_viewer.png")}}),"\n",(0,a.jsx)(r.h3,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsx)(r.p,{children:"First, navigate to the built directory:"}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"cd ${SRC}/build/tools/visualization/\n"})}),"\n",(0,a.jsx)(r.p,{children:"Then run the viewer command:"}),"\n",(0,a.jsxs)(l.default,{groupId:"operating-systems",children:[(0,a.jsx)(c.default,{value:"linux",label:"Linux",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"aria_viewer --vrs path/to/your/file.vrs\n"})})}),(0,a.jsx)(c.default,{value:"macos",label:"macOS",children:(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-bash",children:"DYLD_LIBRARY_PATH=/usr/local/lib aria_viewer --vrs path/to/your/file.vrs\n"})})})]}),"\n",(0,a.jsx)(r.h3,{id:"command-line-options",children:"Command Line Options"}),"\n",(0,a.jsxs)(r.table,{children:[(0,a.jsx)(r.thead,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.th,{children:"Parameter"}),(0,a.jsx)(r.th,{children:"Type"}),(0,a.jsx)(r.th,{children:"Required"}),(0,a.jsx)(r.th,{children:"Description"})]})}),(0,a.jsx)(r.tbody,{children:(0,a.jsxs)(r.tr,{children:[(0,a.jsx)(r.td,{children:(0,a.jsx)(r.code,{children:"--vrs"})}),(0,a.jsx)(r.td,{children:"string"}),(0,a.jsx)(r.td,{children:"Yes"}),(0,a.jsx)(r.td,{children:"Path to the VRS file you want to visualize"})]})})]}),"\n",(0,a.jsx)(r.h3,{id:"what-youll-see",children:"What You'll See"}),"\n",(0,a.jsx)(r.p,{children:"The C++ viewer provides an interactive visualization environment with multiple components:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"RGB & SLAM Camera Streams"}),": Real-time display of RGB and SLAM camera images with overlaid eye gaze and hand tracking results"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"1D Sensor Data"}),": Time series plots of:","\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"IMU signals"})," (accelerometer and gyroscope data)"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Audio signals"})," (microphone waveforms)"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Barometer signals"})," (pressure and temperature readings)"]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"3D Visualization"}),": Interactive 3D scene showing:","\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"VIO trajectory"})," (Visual-Inertial Odometry path)"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Eye gaze vectors"})," in 3D space"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Hand tracking"})," results and poses"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Device pose"})," and orientation"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"interactive-controls",children:"Interactive Controls"}),"\n",(0,a.jsx)(r.p,{children:"The viewer includes real-time controls for:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Play/Pause"}),": Start and stop data playback"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Speed Control"}),": Adjust playback speed using a slider"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Timestamp Navigation"}),": Jump to specific timestamps by dragging the timestamp slider"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Stream Toggles"}),": Enable/disable individual data streams for focused analysis"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"3D Camera Controls"}),": Navigate and explore the 3D visualization"]}),"\n"]}),"\n",(0,a.jsx)(r.h3,{id:"known-issues-and-workarounds",children:"Known Issues and Workarounds"}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"High-frequency sequence playback issue"}),": There is a known issue when playing high-frequency Aria-Gen2 data at real speed, where camera views may update asynchronously. This is due to CPU-based image decoding speed limitations."]}),"\n",(0,a.jsxs)(r.p,{children:[(0,a.jsx)(r.strong,{children:"Workarounds"}),":"]}),"\n",(0,a.jsxs)(r.ol,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Use Python viewer"}),": Fall back to the ",(0,a.jsx)(r.code,{children:"aria_rerun_viewer"})," for smooth high-frequency playback"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Reduce playback speed"}),": Use the speed control slider to play at slower speeds"]}),"\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.strong,{children:"Random access"}),": Dragging the timestamp slider for random access always works correctly"]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:"The development team is actively working on a solution for this issue."})]})}function v(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>i,x:()=>o});var n=s(96540);const a={},t=n.createContext(a);function i(e){const r=n.useContext(t);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(t.Provider,{value:r},e.children)}},49489:(e,r,s)=>{s.r(r),s.d(r,{default:()=>k});var n=s(96540),a=s(34164),t=s(18630),i=s(24245),o=s(56347),l=s(36494),c=s(62814),d=s(45167),u=s(69900);function h(e){return n.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function p(e){const{values:r,children:s}=e;return(0,n.useMemo)(()=>{const e=r??function(e){return h(e).map(({props:{value:e,label:r,attributes:s,default:n}})=>({value:e,label:r,attributes:s,default:n}))}(s);return function(e){const r=(0,d.XI)(e,(e,r)=>e.value===r.value);if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[r,s])}function m({value:e,tabValues:r}){return r.some(r=>r.value===e)}function v({queryString:e=!1,groupId:r}){const s=(0,o.W6)(),a=function({queryString:e=!1,groupId:r}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:e,groupId:r});return[(0,c.aZ)(a),(0,n.useCallback)(e=>{if(!a)return;const r=new URLSearchParams(s.location.search);r.set(a,e),s.replace({...s.location,search:r.toString()})},[a,s])]}function j(e){const{defaultValue:r,queryString:s=!1,groupId:a}=e,t=p(e),[i,o]=(0,n.useState)(()=>function({defaultValue:e,tabValues:r}){if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${r.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const s=r.find(e=>e.default)??r[0];if(!s)throw new Error("Unexpected error: 0 tabValues");return s.value}({defaultValue:r,tabValues:t})),[c,d]=v({queryString:s,groupId:a}),[h,j]=function({groupId:e}){const r=function(e){return e?`docusaurus.tab.${e}`:null}(e),[s,a]=(0,u.Dv)(r);return[s,(0,n.useCallback)(e=>{r&&a.set(e)},[r,a])]}({groupId:a}),g=(()=>{const e=c??h;return m({value:e,tabValues:t})?e:null})();(0,l.A)(()=>{g&&o(g)},[g]);return{selectedValue:i,selectValue:(0,n.useCallback)(e=>{if(!m({value:e,tabValues:t}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),j(e)},[d,j,t]),tabValues:t}}var g=s(11062);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=s(74848);function b({className:e,block:r,selectedValue:s,selectValue:n,tabValues:t}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,i.a_)(),c=e=>{const r=e.currentTarget,a=o.indexOf(r),i=t[a].value;i!==s&&(l(r),n(i))},d=e=>{let r=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const s=o.indexOf(e.currentTarget)+1;r=o[s]??o[0];break}case"ArrowLeft":{const s=o.indexOf(e.currentTarget)-1;r=o[s]??o[o.length-1];break}}r?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,a.A)("tabs",{"tabs--block":r},e),children:t.map(({value:e,label:r,attributes:n})=>(0,f.jsx)("li",{role:"tab",tabIndex:s===e?0:-1,"aria-selected":s===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...n,className:(0,a.A)("tabs__item",x.tabItem,n?.className,{"tabs__item--active":s===e}),children:r??e},e))})}function w({lazy:e,children:r,selectedValue:s}){const t=(Array.isArray(r)?r:[r]).filter(Boolean);if(e){const e=t.find(e=>e.props.value===s);return e?(0,n.cloneElement)(e,{className:(0,a.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:t.map((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==s}))})}function y(e){const r=j(e);return(0,f.jsxs)("div",{className:(0,a.A)(t.G.tabs.container,"tabs-container",x.tabList),children:[(0,f.jsx)(b,{...r,...e}),(0,f.jsx)(w,{...r,...e})]})}function k(e){const r=(0,g.default)();return(0,f.jsx)(y,{...e,children:h(e.children)},String(r))}}}]);