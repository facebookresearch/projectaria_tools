/*
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#pragma once
#include <array>
namespace projectaria::tools::image {

// How the camera InvCRFTable is generated:
// 1. Take multiple captures with varying camera exposure settings on the same static scene with
// Aria
// 2. Build InvCRF function, see Robertson HDR calibration algorithm, and
// https://docs.opencv.org/4.x/d6/df5/group__photo__hdr.html#ga35f1652aa5e908c91a8d4a1fd78502c4
// 3. Fit a spline to the InvCRF function
// 4. Sample spline and build cache table with 256 elements to cameraInvCRFTable
const std::array<double, 256> cameraInvCRFTable = {
    0.0,
    0.0005489583158375797,
    0.0011304615925053726,
    0.0017206098925041386,
    0.002319584122130247,
    0.0029275651876800664,
    0.0035447339954499655,
    0.004171271451736312,
    0.004807358462835479,
    0.005453175935043828,
    0.006108904774657734,
    0.006774725887973564,
    0.007450820181287686,
    0.008137368560896467,
    0.00883455193309628,
    0.009542551204183491,
    0.010261547280454473,
    0.010991721068205586,
    0.011733253473733206,
    0.012486325403333701,
    0.013251117763303443,
    0.01402781145993879,
    0.01481658739953612,
    0.015617626488391797,
    0.016431109632802192,
    0.017257217739063677,
    0.018096131713472616,
    0.01894803246232538,
    0.019813100891918338,
    0.020691517908547855,
    0.0215834644185103,
    0.02248912132810205,
    0.023408669543619462,
    0.024342289971358917,
    0.025290163517616784,
    0.026252471088689406,
    0.027229393590873188,
    0.02822111193046447,
    0.029227807013759644,
    0.030249659747055072,
    0.031286851036647106,
    0.03233956178883213,
    0.03340797290990651,
    0.03449226530616662,
    0.03559261988390881,
    0.036709217549429476,
    0.03784223920902497,
    0.03899186576899166,
    0.040158278135625926,
    0.04134165721522412,
    0.04254218391408263,
    0.04376003913849781,
    0.04499540379476604,
    0.046248458789183676,
    0.0475193850280471,
    0.04880836341765266,
    0.050115574864296755,
    0.05144120027427573,
    0.05278542055388596,
    0.05414841660942382,
    0.055530369347185686,
    0.05693145967346789,
    0.05835186849456683,
    0.05979177671677889,
    0.06125134402733013,
    0.0627306452371655,
    0.06422973393815963,
    0.06574866372218725,
    0.06728748818112294,
    0.06884626090684144,
    0.07042503549121736,
    0.07202386552612536,
    0.07364280460344011,
    0.07528190631503627,
    0.0769412242527885,
    0.07862081200857149,
    0.08032072317425984,
    0.08204101134172825,
    0.08378173010285139,
    0.0855429330495039,
    0.08732467377356042,
    0.08912700586689566,
    0.09094998292138422,
    0.09279365852890081,
    0.09465808628132008,
    0.09654331977051668,
    0.09844941258836529,
    0.10037641832674053,
    0.10232439057751708,
    0.10429338293256958,
    0.10628344898377279,
    0.10829464232300128,
    0.11032701654212967,
    0.11238062523303273,
    0.11445552198758502,
    0.11655176039766128,
    0.11866939405513612,
    0.1208084765518842,
    0.12296906147978025,
    0.12515120243069883,
    0.12735495299651467,
    0.1295803667691024,
    0.13182749734033666,
    0.13409639830209213,
    0.13638712324624355,
    0.13869972576466547,
    0.14103425944923256,
    0.14339077789181956,
    0.14576933468430103,
    0.14816998341855173,
    0.15059277768644622,
    0.15303777107985925,
    0.1555050171906654,
    0.15799456961073938,
    0.16050648193195585,
    0.16304080774618943,
    0.16559760064531487,
    0.16817691422120676,
    0.17077880206573973,
    0.17340331777078852,
    0.1760505149282277,
    0.17872044712993204,
    0.1814131679677761,
    0.18412873103363459,
    0.18686718991938217,
    0.18962859821689348,
    0.19241322376272835,
    0.19522219137218724,
    0.19805684010525568,
    0.20091850902191935,
    0.20380853718216377,
    0.20672826364597457,
    0.2096790274733374,
    0.21266216772423774,
    0.21567902345866122,
    0.21873093373659347,
    0.22181923761802008,
    0.2249452741629267,
    0.22811038243129877,
    0.231315901483122,
    0.234563170378382,
    0.2378535281770643,
    0.2411883139391545,
    0.2445688667246383,
    0.2479965255935011,
    0.25147262960572864,
    0.2549985178213065,
    0.25857552930022026,
    0.2622050031024555,
    0.26588827828799777,
    0.2696266939168328,
    0.2734215890489461,
    0.27727430274432324,
    0.2811861740629498,
    0.2851585420648115,
    0.28919274580989385,
    0.29329012435818236,
    0.2974520167696628,
    0.30167954500568883,
    0.30597296263308676,
    0.31033230612005097,
    0.314757611934776,
    0.31924891654545634,
    0.3238062564202863,
    0.32842966802746065,
    0.3331191878351734,
    0.33787485231161934,
    0.34269669792499285,
    0.3475847611434884,
    0.35253907843530036,
    0.35755968626862317,
    0.36264662111165136,
    0.3677999194325794,
    0.3730196176996018,
    0.3783057523809129,
    0.38365835994470704,
    0.3890774768591791,
    0.3945631395925231,
    0.4001153846129337,
    0.4057342483886053,
    0.4114197673877324,
    0.4171719780785095,
    0.42299091692913093,
    0.4288766204077912,
    0.4348291249826848,
    0.44084846712200615,
    0.44693468329394964,
    0.4530878099667099,
    0.45930788360848124,
    0.4655948393826846,
    0.47194820723364705,
    0.4783674158009217,
    0.48485189372406234,
    0.49140106964262215,
    0.49801437219615463,
    0.5046912300242129,
    0.5114310717663507,
    0.5182333260621212,
    0.5250974215510781,
    0.5320227868727746,
    0.5390088506667641,
    0.5460550415725999,
    0.5531607882298355,
    0.5603255192780244,
    0.5675486633567199,
    0.5748296491054756,
    0.5821679051638445,
    0.5895628601713804,
    0.5970139427676364,
    0.6045205815921662,
    0.612082205284523,
    0.6196982424842601,
    0.6273681218309314,
    0.6350912719640895,
    0.6428671215232885,
    0.6506950991480817,
    0.6585746334780221,
    0.6665051531526636,
    0.6744860868115592,
    0.6825168630942625,
    0.6905969106403269,
    0.6987256580893058,
    0.7069025340807524,
    0.7151269672542204,
    0.7233983862492631,
    0.7317162197054341,
    0.7400798962622864,
    0.7484888445593735,
    0.7569424932362492,
    0.7654402709324662,
    0.7739816062875785,
    0.7825659279411395,
    0.7911926645327022,
    0.7998612447018203,
    0.8085710970880473,
    0.817321650330936,
    0.8261123330700405,
    0.8349425739449137,
    0.8438118015951095,
    0.852719444660181,
    0.8616649317796815,
    0.8706476915931647,
    0.8796671527401837,
    0.8887227438602919,
    0.897813893593043,
    0.9069400305779904,
    0.9161005834546873,
    0.9252949808626869,
    0.9345226514415432,
    0.943783023830809,
    0.9530755266700381,
    0.962399588598784,
    0.9717546382565994,
    0.9811401042830384,
    0.9905554153176543,
    1.0};

// How we generate the color correction matrix:
// 1. Capture color checker chart with Aria under D50 light source
// 2. Optimize color correction matrix to minimize the error between the color checker from captured
// image and the ground truth color checker values, this is a 3x3 matrix Note: during optimization,
// we need to transform color into linear space and reduce the impact from vignetting.
const std::array<double, 9> colorCorrectionMatrixData = {
    0.7436561584472656,
    0.15223266184329987,
    -0.012550695799291134,
    0.02287297323346138,
    0.8269245028495789,
    -0.004977707751095295,
    -0.02940891683101654,
    -0.08261162042617798,
    0.5401387810707092};

} // namespace projectaria::tools::image
